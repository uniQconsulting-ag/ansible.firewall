---

- block:
  ################
  #   Prepare
  ################

  - name: install packages
    yum:
      name: "{{ firewall_geoip_packages }}"
      state: present
    when: not nginx_update_only

  - name: create universal-allow sets
    shell: ipset create universal_allow nethash
    register: restorecon_res
    changed_when: restorecon_res.stdout == ""
    ignore_errors: yes

  - name: flush universal-allow existing sets
    shell: ipset flush universal_allow
    changed_when: no
    ignore_errors: yes

  - name: import universal-allow addresses
    shell: ipset add universal_allow {{ item }}
    with_items: "{{ firewall_geoip_universal_allow }}"
    
  - name: save ipsets
    shell: ipset save > {{ firewall_geoip_ipset_save }}

  - name: generate update-script
    template:
      src: ipsets-update
      dest: "{{ firewall_geoip_ipset_update_script }}"
      owner: root
      group: root
      mode: '0750'
    when: not nginx_update_only

  - name: run update-script
    shell: "bash {{ firewall_geoip_ipset_update_script }}"
    changed_when: no

  - name: update cronjob for update-task
    cron:
      name: "geoip-update"
      minute: "{{ 59 | random(start=1 }}"
      hour: "0"
      job: "{{ firewall_geoip_ipset_update_script }} > /dev/null"

  - name: generate save-script
    template:
      src: ipsets-save.j2
      dest: "{{ firewall_geoip_ipset_save_script }}"
      owner: root
      group: root
      mode: '0700'
    when: not nginx_update_only

  - name: generate ipsets-restore
    template:
      src: ipsets-restore.j2
      dest: "{{ firewall_geoip_ipset_restore_script }}"
      owner: root
      group: root
      mode: '0700'
    when: not nginx_update_only

  - name: generate service
    template:
      src: ipsets.service.j2
      dest: /etc/systemd/system/ipsets.service
    when: not nginx_update_only

  - name: reload services
    systemd:
      daemon_reload: yes
    when: not nginx_update_only

  - name: start & enable ipsets service
    systemd:
      name: ipsets
      state: started
      enabled: yes
    when: not nginx_update_only


  when: geoip_ipsets

...